name: Build tar and wheel

on:
  push:
    branches:
      - publish
    tags:
      - "*"
  pull_request:  # also build on PRs touching this file
    paths:
      - "./.github/workflows/release.yml"
      - "pyproject.toml"

jobs:
  build_wheels:
    name: Build wheel and source dist
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheels
        run: |
          python -m pip install wheel build
          python -m build .

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*
          retention-days: 5

  publish:
    name: Publish on GitHub and PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # release on every tag
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - name: Check if Release Exists
        id: check_release
        run: |
          if gh release view ${{ github.ref }}; then echo "exists=true" >> $GITHUB_ENV; else echo "exists=false" >> $GITHUB_ENV; fi

      - name: Create GitHub Release
        id: create_release
        if: env.exists == 'false'
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get Asset name
        run: |
          export PKG=$(ls dist/ | grep tar)
          set -- $PKG
          echo "name=$1" >> $GITHUB_ENV

      - name: Upload Release Asset (sdist) to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url
          asset_path: dist/${{ env.name }}
          asset_name: ${{ env.name }}
          asset_content_type: application/zip

      - name: Upload Release Assets to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          skip_existing: true
